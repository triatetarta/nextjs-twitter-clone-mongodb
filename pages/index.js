import Head from "next/head";
import { useEffect, useState } from "react";
import { getSession, withPageAuthRequired } from "@auth0/nextjs-auth0";
import Sidebar from "../components/Sidebar";
import Feed from "../components/Feed";
import Widgets from "../components/Widgets";

export default function Home() {
  const [text, setText] = useState("");
  const [tweets, setTweets] = useState([]);

  useEffect(() => {
    const fetchData = async () => {
      const getUser = await fetch("/api/user");
      const getUserJson = await getUser.json();

      const getTweets = await fetch("/api/tweet");
      const getTweetsJson = await getTweets.json();

      setTweets(getTweetsJson);
    };

    fetchData();
  }, []);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setText("");
    const tweet = {
      postedAt: Date.now(),
      body: text,
      likes: [],
      user: {
        id: "59489548",
        name: "Dimitris",
        nickname: "Three Quarters",
        picture: "",
      },
    };

    const response = await fetch("api/tweet", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(tweet),
    });

    const responseJson = await response.json();

    console.log("response: ", responseJson);
  };

  return (
    <div>
      <Head>
        <title>Twitter Clone</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className='min-h-screen flex max-w-[1500px] mx-auto'>
        <Sidebar />
        <Feed tweets={tweets} />

        <Widgets />

        {/* {modalOpen && <Modal />} */}
      </main>

      {/* <form onSubmit={handleSubmit}>
        <input
          className='border'
          type='text'
          value={text}
          onChange={(e) => setText(e.target.value)}
        />
        <button type='submit' className='bg-blue-500 text-white'>
          tweet
        </button>
      </form>

      <div>
        {tweets?.map((tweet) => {
          console.log(tweet);
          return <div key={tweet._id}>{tweet.body}</div>;
        })}
      </div> */}
    </div>
  );
}

export const getServerSideProps = withPageAuthRequired();
